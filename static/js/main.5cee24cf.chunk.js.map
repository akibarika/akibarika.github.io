{"version":3,"sources":["components/Header.js","Data.js","components/BarChart.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","styled","nav","InnerNav","div","A","a","Span","span","Header","href","Component","Data","Date","BarChart","width","chartType","loader","data","options","theme","legend","position","colors","controls","controlType","filterColumnIndex","ui","chartOptions","chartArea","height","hAxis","baselineColor","controlPosition","controlWrapperParams","state","range","start","end","Card","CardContainer","CardHeader","CardHeaderText","CardIcon","CardText1","CardText2","CardText3","Cards","Assignment","style","color","fontSize","this","props","numberOfQuiz","EmojiEvents","highestScore","highestScoreTime","Grade","averageScore","People","averageAttendees","Section","section","Container","length","highestData","slice","reduce","p","c","toLocaleDateString","sum","toFixed","App","Helmet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cee24cf.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport styled from 'styled-components';\n\nconst Navbar = styled.nav`\n    min-height: 60px;\n    box-shadow: -2px 0 7px #e3e2e4;\n    z-index: 1025;\n    background-color: #fff;\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: .5rem 1rem;\n`\n\nconst InnerNav = styled.div`\n  display: flex;\n  width: 100%;\n`\nconst A = styled.a`\n    display: inline-block;\n    padding-top: .3125rem;\n    padding-bottom: .3125rem;\n    margin-right: 1rem;\n    font-size: 1.25rem;\n    line-height: inherit;\n    white-space: nowrap;\n    text-decoration: none;\n`\nconst Span = styled.span`\n    padding-top: .5rem;\n    font-size: 21px;\n    font-weight: 700;\n    color: #454454;\n    text-transform: uppercase;\n`\n\nclass Header extends Component {\n    render() {\n        return (\n            <>\n                <header>\n                    <Navbar>\n                        <InnerNav>\n                            <A href=\"/\">\n                                <Span>\n                                    Team Avenger scoreboard\n                                </Span>\n                            </A>\n                        </InnerNav>\n                    </Navbar>\n                </header>\n            </>\n        )\n    }\n}\n\nexport default Header\n","const Data = [\n    ['Date', 'Score', 'Number of People'],\n    [new Date(2020, 6, 10), 12, 8],\n    [new Date(2020, 6, 13), 9, 8],\n    [new Date(2020, 6, 14), 12, 8],\n    [new Date(2020, 6, 15), 14, 10],\n    [new Date(2020, 6, 16), 12, 10],\n    [new Date(2020, 6, 17), 11, 11],\n    [new Date(2020, 6, 21), 11, 9],\n    [new Date(2020, 6, 22), 11, 9],\n    [new Date(2020, 6, 23), 14, 10],\n    [new Date(2020, 6, 24), 13, 8],\n    [new Date(2020, 6, 27), 9, 9],\n    [new Date(2020, 6, 28), 12, 10],\n    [new Date(2020, 7, 4), 11, 10],\n    [new Date(2020, 7, 5), 10, 10],\n    [new Date(2020, 7, 6), 8, 11],\n    [new Date(2020, 7, 7), 11, 11],\n    [new Date(2020, 7, 10), 12, 10],\n]\n\nexport default Data\n","import React, {Component} from \"react\";\nimport Chart from \"react-google-charts\";\n\nimport Data from '../Data'\n\nclass BarChart extends Component {\n    render() {\n        return (\n            <>\n                <Chart\n                    width={'100%'}\n                    chartType=\"Bar\"\n                    loader={<div>Loading Chart</div>}\n                    data={Data}\n                    options={{\n                        theme: 'material',\n                        legend: {\n                            position : 'bottom'\n                        },\n                        colors: ['#29c3be', '#bc95df']\n                    }}\n                    controls={[\n                        {\n                            controlType: 'ChartRangeFilter',\n                            options: {\n                                filterColumnIndex: 0,\n                                ui: {\n                                    chartType: 'LineChart',\n                                    chartOptions: {\n                                        chartArea: {width: '100%', height: '50%'},\n                                        hAxis: {baselineColor: 'none'},\n                                        colors: ['#29c3be', '#bc95df']\n                                    },\n                                },\n                            },\n                            controlPosition: 'bottom',\n                            controlWrapperParams: {\n                                state: {\n                                    range: {start: new Date(2020, 6, 10), end: new Date(2020, 6, 24)},\n                                },\n                            },\n                        },\n                    ]}\n                />\n            </>\n        )\n    }\n}\n\nexport default BarChart;\n","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport {Assignment, EmojiEvents,People,Grade} from '@material-ui/icons';\n\nconst Card = styled.div`\n    width: 50%;\n    margin-top: 0;\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n`\n\nconst CardContainer = styled.div`\n    padding: 10px 0;\n    width: 100%;\n    margin: 0 auto;\n    color: #424153;\n`\nconst CardHeader = styled.div`\n    font-size: 18px;\n    text-align: center;\n    position: relative;\n`\nconst CardHeaderText = styled.div`\n    font-size: 18px;\n    padding-left: 69px;\n    display: block;\n    color: #6d6d87;\n    margin-top: 13px;\n    text-align: left;\n`\nconst CardIcon = styled.div`\n    width: 45px;\n    height: 45px;\n    padding: 12px;\n    border-radius: 50%;\n    display: block;\n    margin: 0 auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n`\nconst CardText1 = styled.div`\n    color: #434456;\n    font-size: 20px;\n    font-weight: 500;\n    margin-bottom: 10px;\n`\nconst CardText2 = styled.div`\n    color: #9999b8;\n    font-size: 15px;\n`\nconst CardText3 = styled.div`\n    color: #9999b8;\n    font-size: 14px;\n    width: 160px;\n    margin-top: 3px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-weight: 600;\n`\n\nclass Cards extends Component {\n    render() {\n        return (\n            <>\n                <Card>\n                    <CardContainer>\n                        <CardHeader>\n                            <CardIcon>\n                                <Assignment style={{ color: '#767aff' }} fontSize=\"large\"/>\n                            </CardIcon>\n                            <CardHeaderText>\n                                <CardText1>\n                                    We did\n                                </CardText1>\n                                <CardText2>\n                                    {this.props.numberOfQuiz}\n                                </CardText2>\n                                <CardText3>\n                                    Times in Total\n                                </CardText3>\n                            </CardHeaderText>\n                        </CardHeader>\n                    </CardContainer>\n                </Card>\n                <Card>\n                    <CardContainer>\n                        <CardHeader>\n                            <CardIcon>\n                                <EmojiEvents style={{ color: '#f7a42c' }} fontSize=\"large\"/>\n                            </CardIcon>\n                            <CardHeaderText>\n                                <CardText1>Highest</CardText1>\n                                <CardText2>{this.props.highestScore}</CardText2>\n                                <CardText3>{`on ${this.props.highestScoreTime}`}</CardText3>\n                            </CardHeaderText>\n                        </CardHeader>\n                    </CardContainer>\n                </Card>\n                <Card>\n                    <CardContainer>\n                        <CardHeader>\n                            <CardIcon>\n                                <Grade style={{ color: '#f266a3' }} fontSize=\"large\"/>\n                            </CardIcon>\n                            <CardHeaderText>\n                                <CardText1>Average Score</CardText1>\n                                <CardText2>{this.props.averageScore}</CardText2>\n                                <CardText3>{`Based on total ${this.props.numberOfQuiz} runs`}</CardText3>\n                            </CardHeaderText>\n                        </CardHeader>\n                    </CardContainer>\n                </Card>\n                <Card>\n                    <CardContainer>\n                        <CardHeader>\n                            <CardIcon>\n                                <People style={{ color: '#02cd8e' }} fontSize=\"large\"/>\n                            </CardIcon>\n                            <CardHeaderText>\n                                <CardText1>Average Attendees</CardText1>\n                                <CardText2>{this.props.averageAttendees}</CardText2>\n                                <CardText3>{`Based on total ${this.props.numberOfQuiz} runs`}</CardText3>\n                            </CardHeaderText>\n                        </CardHeader>\n                    </CardContainer>\n                </Card>\n            </>\n        )\n    }\n}\n\nexport default Cards\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\n\nimport Header from \"./components/Header\";\nimport BarChart from \"./components/BarChart\";\nimport Cards from \"./components/Cards\";\nimport Data from \"./Data\";\n\nimport './App.css';\nconst Section = styled.section`\n    border-radius: 15px;\n    max-width: 1315px;\n    width: 96%;\n    margin: 35px auto;\n`\nconst Container = styled.div`\n    border-radius: 12px;\n    background: #fff;\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,.06);\n    padding: 20px!important;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    flex-direction: row;\n`\nconst numberOfQuiz = Data.length - 1, highestData = Data.slice(1).reduce((p, c) => p[1] > c[1] ? p : c),\n    highestScore = highestData[1], highestScoreTime = highestData[0].toLocaleDateString(),\n    averageScore = (Data.slice(1).reduce((sum, p) => sum + p[1], 0) / numberOfQuiz).toFixed(2),\n    averageAttendees = (Data.slice(1).reduce((sum, p) => sum + p[2], 0) / numberOfQuiz).toFixed(2);\n\nconst App = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Team Avenger Scoreboard</title>\n            </Helmet>\n            <Header/>\n            <Section>\n                <Container>\n                    <Cards numberOfQuiz={numberOfQuiz} highestScore={highestScore} highestScoreTime={highestScoreTime} averageScore={averageScore} averageAttendees={averageAttendees}/>\n                </Container>\n            </Section>\n            <Section>\n                <Container>\n                    <BarChart/>\n                </Container>\n            </Section>\n\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}